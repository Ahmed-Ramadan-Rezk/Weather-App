{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Projects\\\\Weather App\\\\weather_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport LeftSide from './components/LeftSide';\nimport RightSide from './components/RightSide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'eabd8b1db297d680fe7d9ebdbb9b028a';\nconst API_URL = `http://api.openweathermap.org/data/2.5/onecall?`;\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nfunction App() {\n  _s();\n\n  const [isToggle, setIsToggle] = useState(false);\n\n  const toggle = e => {\n    setIsToggle(!isToggle);\n  };\n  /* All Needed States */\n\n\n  const [lat, setLat] = useState([]);\n  const [lon, setLon] = useState([]);\n  const [day0, setDay0] = useState([]);\n  const [day1, setDay1] = useState([]);\n  const [day2, setDay2] = useState([]);\n  const [day3, setDay3] = useState([]);\n  const [day4, setDay4] = useState([]);\n  const [day5, setDay5] = useState([]);\n  const [day6, setDay6] = useState([]);\n  const [day7, setDay7] = useState([]);\n  const [icon0, setIcon0] = useState([]);\n  const [icon1, setIcon1] = useState([]);\n  const [icon2, setIcon2] = useState([]);\n  const [icon3, setIcon3] = useState([]);\n  const [icon4, setIcon4] = useState([]);\n  const [icon5, setIcon5] = useState([]);\n  const [icon6, setIcon6] = useState([]);\n  const [icon7, setIcon7] = useState([]);\n  const [temp0, setTemp0] = useState([]);\n  const [temp1, setTemp1] = useState([]);\n  const [temp2, setTemp2] = useState([]);\n  const [temp3, setTemp3] = useState([]);\n  const [temp4, setTemp4] = useState([]);\n  const [temp5, setTemp5] = useState([]);\n  const [temp6, setTemp6] = useState([]);\n  const [temp7, setTemp7] = useState([]);\n  const [currentTemp, setCurrentTemp] = useState([]);\n  const [desc, setDesc] = useState([]);\n  const [currentIcon, setCurrentIcon] = useState([]);\n  const [timeZone, setTimeZone] = useState([]);\n  const [uvi, setUvi] = useState([]);\n  const [windSpeed, setWindSpeed] = useState([]);\n  const [sunrise, setSunrise] = useState([]);\n  const [sunset, setSunset] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n  const [visibility, setVisibility] = useState([]);\n  const [windDeg, setWindDeg] = useState([]);\n  const [rain, setRain] = useState([]);\n  const [weatherMain, setWeatherMain] = useState([]);\n  /* All Needed States */\n\n  useEffect(() => {\n    // Get current position with Latitude & Longitude\n    navigator.geolocation.getCurrentPosition(position => {\n      setLat(position.coords.latitude);\n      setLon(position.coords.longitude);\n    }); // Request & get data from the API URL\n\n    axios.get(`${API_URL}lat=${lat}&lon=${lon}&exclude=hourly,minutley&units=metric&appid=${API_KEY}`).then(res => {\n      const getData = res.data;\n      /* All Needed API Data */\n\n      setDay0(weekdays[new Date(getData.daily[0].dt * 1000).getDay()]);\n      setDay1(weekdays[new Date(getData.daily[1].dt * 1000).getDay()]);\n      setDay2(weekdays[new Date(getData.daily[2].dt * 1000).getDay()]);\n      setDay3(weekdays[new Date(getData.daily[3].dt * 1000).getDay()]);\n      setDay4(weekdays[new Date(getData.daily[4].dt * 1000).getDay()]);\n      setDay5(weekdays[new Date(getData.daily[5].dt * 1000).getDay()]);\n      setDay6(weekdays[new Date(getData.daily[6].dt * 1000).getDay()]);\n      setDay7(weekdays[new Date(getData.daily[7].dt * 1000).getDay()]);\n      setIcon0(getData.daily[0].weather[0].icon);\n      setIcon1(getData.daily[1].weather[0].icon);\n      setIcon2(getData.daily[2].weather[0].icon);\n      setIcon3(getData.daily[3].weather[0].icon);\n      setIcon4(getData.daily[4].weather[0].icon);\n      setIcon5(getData.daily[5].weather[0].icon);\n      setIcon6(getData.daily[6].weather[0].icon);\n      setIcon7(getData.daily[7].weather[0].icon);\n      setTemp0(getData.daily[0].temp.day);\n      setTemp1(getData.daily[1].temp.day);\n      setTemp2(getData.daily[2].temp.day);\n      setTemp3(getData.daily[3].temp.day);\n      setTemp4(getData.daily[4].temp.day);\n      setTemp5(getData.daily[5].temp.day);\n      setTemp6(getData.daily[6].temp.day);\n      setTemp7(getData.daily[7].temp.day);\n      setUvi(getData.current.uvi);\n      setWindSpeed(getData.current.wind_speed);\n      setSunrise(new Date(getData.current.sunrise * 1000).toLocaleTimeString());\n      setSunset(new Date(getData.current.sunset * 1000).toLocaleTimeString());\n      setHumidity(getData.current.humidity);\n      setVisibility(getData.current.visibility);\n      setWindDeg(getData.current.wind_deg);\n      setCurrentTemp(getData.current.temp);\n      setDesc(getData.current.weather[0].description);\n      setCurrentIcon(getData.current.weather[0].icon);\n      setTimeZone(getData.timezone);\n      setRain(getData.current.rain);\n      setWeatherMain(getData.current.weather[0].main);\n      /* All Needed API Data */\n    });\n  }, [lat, lon]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSide, {\n      currentTemp: currentTemp,\n      desc: desc,\n      currentIcon: currentIcon,\n      toggle: toggle,\n      isToggle: isToggle,\n      timeZone: timeZone,\n      rain: rain,\n      weatherMain: weatherMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n      day0: day0,\n      day1: day1,\n      day2: day2,\n      day3: day3,\n      day4: day4,\n      day5: day5,\n      day6: day6,\n      day7: day7,\n      temp0: temp0,\n      temp1: temp1,\n      temp2: temp2,\n      temp3: temp3,\n      temp4: temp4,\n      temp5: temp5,\n      temp6: temp6,\n      temp7: temp7,\n      icon0: icon0,\n      icon1: icon1,\n      icon2: icon2,\n      icon3: icon3,\n      icon4: icon4,\n      icon5: icon5,\n      icon6: icon6,\n      icon7: icon7,\n      uvi: uvi,\n      windSpeed: windSpeed,\n      sunrise: sunrise,\n      sunset: sunset,\n      humidity: humidity,\n      visibility: visibility,\n      windDeg: windDeg,\n      toggle: toggle,\n      isToggle: isToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+dl7aRurkQEDaAaauLthGB85k98=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Programming/Projects/Weather App/weather_app/src/App.js"],"names":["React","useState","useEffect","axios","LeftSide","RightSide","API_KEY","API_URL","weekdays","App","isToggle","setIsToggle","toggle","e","lat","setLat","lon","setLon","day0","setDay0","day1","setDay1","day2","setDay2","day3","setDay3","day4","setDay4","day5","setDay5","day6","setDay6","day7","setDay7","icon0","setIcon0","icon1","setIcon1","icon2","setIcon2","icon3","setIcon3","icon4","setIcon4","icon5","setIcon5","icon6","setIcon6","icon7","setIcon7","temp0","setTemp0","temp1","setTemp1","temp2","setTemp2","temp3","setTemp3","temp4","setTemp4","temp5","setTemp5","temp6","setTemp6","temp7","setTemp7","currentTemp","setCurrentTemp","desc","setDesc","currentIcon","setCurrentIcon","timeZone","setTimeZone","uvi","setUvi","windSpeed","setWindSpeed","sunrise","setSunrise","sunset","setSunset","humidity","setHumidity","visibility","setVisibility","windDeg","setWindDeg","rain","setRain","weatherMain","setWeatherMain","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","res","getData","data","Date","daily","dt","getDay","weather","icon","temp","day","current","wind_speed","toLocaleTimeString","wind_deg","description","timezone","main"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport LeftSide from './components/LeftSide';\nimport RightSide from './components/RightSide';\n\nconst API_KEY = 'eabd8b1db297d680fe7d9ebdbb9b028a';\nconst API_URL = `http://api.openweathermap.org/data/2.5/onecall?`;\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nfunction App() {\n    const [isToggle, setIsToggle] = useState(false)\n    const toggle = (e) => {\n      setIsToggle(!isToggle);\n    }\n\n  /* All Needed States */\n  const [lat, setLat] = useState([]);\n  const [lon, setLon] = useState([]);\n\n  const [day0, setDay0] = useState([]);\n  const [day1, setDay1] = useState([]);\n  const [day2, setDay2] = useState([]);\n  const [day3, setDay3] = useState([]);\n  const [day4, setDay4] = useState([]);\n  const [day5, setDay5] = useState([]);\n  const [day6, setDay6] = useState([]);\n  const [day7, setDay7] = useState([]);\n\n  const [icon0, setIcon0] = useState([]);\n  const [icon1, setIcon1] = useState([]);\n  const [icon2, setIcon2] = useState([]);\n  const [icon3, setIcon3] = useState([]);\n  const [icon4, setIcon4] = useState([]);\n  const [icon5, setIcon5] = useState([]);\n  const [icon6, setIcon6] = useState([]);\n  const [icon7, setIcon7] = useState([]);\n\n  const [temp0, setTemp0] = useState([]);\n  const [temp1, setTemp1] = useState([]);\n  const [temp2, setTemp2] = useState([]);\n  const [temp3, setTemp3] = useState([]);\n  const [temp4, setTemp4] = useState([]);\n  const [temp5, setTemp5] = useState([]);\n  const [temp6, setTemp6] = useState([]);\n  const [temp7, setTemp7] = useState([]);\n\n  const [currentTemp, setCurrentTemp] = useState([]);\n  const [desc, setDesc] = useState([]);\n  const [currentIcon, setCurrentIcon] = useState([]);\n  const [timeZone, setTimeZone] = useState([]);\n  const [uvi, setUvi] = useState([]);\n  const [windSpeed, setWindSpeed] = useState([]);\n  const [sunrise, setSunrise] = useState([]);\n  const [sunset, setSunset] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n  const [visibility, setVisibility] = useState([]);\n  const [windDeg, setWindDeg] = useState([]);\n  const [rain, setRain] = useState([]);\n  const [weatherMain, setWeatherMain] = useState([])\n  /* All Needed States */\n\n  useEffect(() => {\n    // Get current position with Latitude & Longitude\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLat(position.coords.latitude);\n      setLon(position.coords.longitude);\n    })\n    \n    // Request & get data from the API URL\n    axios.get(`${API_URL}lat=${lat}&lon=${lon}&exclude=hourly,minutley&units=metric&appid=${API_KEY}`)\n    .then((res) => {\n      const getData = res.data;\n\n      /* All Needed API Data */\n      setDay0(weekdays[new Date(getData.daily[0].dt * 1000).getDay()]);\n      setDay1(weekdays[new Date(getData.daily[1].dt * 1000).getDay()]);\n      setDay2(weekdays[new Date(getData.daily[2].dt * 1000).getDay()]);\n      setDay3(weekdays[new Date(getData.daily[3].dt * 1000).getDay()]);\n      setDay4(weekdays[new Date(getData.daily[4].dt * 1000).getDay()]);\n      setDay5(weekdays[new Date(getData.daily[5].dt * 1000).getDay()]);\n      setDay6(weekdays[new Date(getData.daily[6].dt * 1000).getDay()]);\n      setDay7(weekdays[new Date(getData.daily[7].dt * 1000).getDay()]);\n\n      setIcon0(getData.daily[0].weather[0].icon);\n      setIcon1(getData.daily[1].weather[0].icon);\n      setIcon2(getData.daily[2].weather[0].icon);\n      setIcon3(getData.daily[3].weather[0].icon);\n      setIcon4(getData.daily[4].weather[0].icon);\n      setIcon5(getData.daily[5].weather[0].icon);\n      setIcon6(getData.daily[6].weather[0].icon);\n      setIcon7(getData.daily[7].weather[0].icon);\n\n      setTemp0(getData.daily[0].temp.day);\n      setTemp1(getData.daily[1].temp.day);\n      setTemp2(getData.daily[2].temp.day);\n      setTemp3(getData.daily[3].temp.day);\n      setTemp4(getData.daily[4].temp.day);\n      setTemp5(getData.daily[5].temp.day);\n      setTemp6(getData.daily[6].temp.day);\n      setTemp7(getData.daily[7].temp.day);\n\n      setUvi(getData.current.uvi);\n      setWindSpeed(getData.current.wind_speed);\n      setSunrise(new Date(getData.current.sunrise * 1000).toLocaleTimeString());\n      setSunset(new Date(getData.current.sunset * 1000).toLocaleTimeString());\n      setHumidity(getData.current.humidity);\n      setVisibility(getData.current.visibility);\n      setWindDeg(getData.current.wind_deg);\n      setCurrentTemp(getData.current.temp);\n      setDesc(getData.current.weather[0].description);\n      setCurrentIcon(getData.current.weather[0].icon);\n      setTimeZone(getData.timezone);\n      setRain(getData.current.rain);\n      setWeatherMain(getData.current.weather[0].main);\n      /* All Needed API Data */\n    });\n  }, [lat, lon])\n\n  return (\n    <section className=\"app\">\n      <LeftSide \n        currentTemp={currentTemp}\n        desc={desc}\n        currentIcon={currentIcon}\n        toggle={toggle}\n        isToggle={isToggle}\n        timeZone={timeZone}\n        rain={rain}\n        weatherMain={weatherMain}\n      />\n      \n      <RightSide \n        day0={day0}\n        day1={day1}\n        day2={day2}\n        day3={day3}\n        day4={day4}\n        day5={day5}\n        day6={day6}\n        day7={day7}\n\n        temp0={temp0}\n        temp1={temp1}\n        temp2={temp2}\n        temp3={temp3}\n        temp4={temp4}\n        temp5={temp5}\n        temp6={temp6}\n        temp7={temp7}\n\n        icon0={icon0}\n        icon1={icon1}\n        icon2={icon2}\n        icon3={icon3}\n        icon4={icon4}\n        icon5={icon5}\n        icon6={icon6}\n        icon7={icon7}\n\n        uvi={uvi}\n        windSpeed={windSpeed}\n        sunrise={sunrise}\n        sunset={sunset}\n        humidity={humidity}\n        visibility={visibility}\n        windDeg={windDeg}\n        toggle={toggle}\n        isToggle={isToggle}\n      />\n    </section>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}