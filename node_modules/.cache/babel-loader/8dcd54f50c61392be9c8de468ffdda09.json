{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Projects\\\\Weather App\\\\weather_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport LeftSide from './components/LeftSide';\nimport RightSide from './components/RightSide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'eabd8b1db297d680fe7d9ebdbb9b028a';\nconst API_URL = `http://api.openweathermap.org/data/2.5/onecall?`;\n\nfunction App() {\n  _s();\n\n  // All Needed Data\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [temp, setTemp] = useState(null);\n  const [icon, setIcon] = useState(null);\n  const [uvi, setUvi] = useState(null);\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [sunrise, setSunrise] = useState(null);\n  const [sunset, setSunset] = useState(null);\n  const [humidity, setHumidity] = useState(null);\n  const [visibility, setVisibility] = useState(null);\n  const [windDeg, setWindDeg] = useState(null);\n  useEffect(() => {\n    // Get current position with Latitude & Longitude\n    navigator.geolocation.getCurrentPosition(position => {\n      setLat(position.coords.latitude);\n      setLon(position.coords.longitude);\n    }); // Request & get data from the API URL\n\n    axios.get(`${API_URL}lat=${lat}&lon=${lon}&exclude=hourly,minutley&units=metric&appid=${API_KEY}`).then(getWeather => {\n      console.log(getWeather.data);\n      const nums = [0, 1, 2, 3, 4, 5, 6, 7];\n\n      for (var i = 0; i <= 7; i++) {\n        setTemp(getWeather.data.daily[nums[4]].temp.day);\n      } // setIcon(getWeather.data.daily.weather.icon);\n\n\n      setUvi(getWeather.data.current.uvi);\n      setWindSpeed(getWeather.data.current.wind_speed);\n      setSunrise(getWeather.data.current.sunrise);\n      setSunset(getWeather.data.current.sunset);\n      setHumidity(getWeather.data.current.humidity);\n      setVisibility(getWeather.data.current.visibility);\n      setWindDeg(getWeather.data.current.wind_deg);\n    });\n  }, [lat, lon]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSide, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n      temp: temp,\n      icon: icon,\n      uvi: uvi,\n      windSpeed: windSpeed,\n      sunrise: sunrise,\n      sunset: sunset,\n      humidity: humidity,\n      visibility: visibility,\n      windDeg: windDeg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bk0ZqQ5fiQoZIXCcltO1NCnySWI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Programming/Projects/Weather App/weather_app/src/App.js"],"names":["React","useState","useEffect","axios","LeftSide","RightSide","API_KEY","API_URL","App","lat","setLat","lon","setLon","temp","setTemp","icon","setIcon","uvi","setUvi","windSpeed","setWindSpeed","sunrise","setSunrise","sunset","setSunset","humidity","setHumidity","visibility","setVisibility","windDeg","setWindDeg","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","getWeather","console","log","data","nums","i","daily","day","current","wind_speed","wind_deg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,OAAO,GAAI,iDAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,IAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA6B,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrDxB,MAAAA,MAAM,CAACwB,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAxB,MAAAA,MAAM,CAACsB,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAN;AACD,KAHD,EAFc,CAOd;;AACAlC,IAAAA,KAAK,CAACmC,GAAN,CAAW,GAAE/B,OAAQ,OAAME,GAAI,QAAOE,GAAI,+CAA8CL,OAAQ,EAAhG,EACCiC,IADD,CACOC,UAAD,IAAgB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAU,CAACG,IAAvB;AACA,YAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAb;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B/B,QAAAA,OAAO,CAAC0B,UAAU,CAACG,IAAX,CAAgBG,KAAhB,CAAsBF,IAAI,CAAC,CAAD,CAA1B,EAA+B/B,IAA/B,CAAoCkC,GAArC,CAAP;AACD,OALmB,CAOpB;;;AACA7B,MAAAA,MAAM,CAACsB,UAAU,CAACG,IAAX,CAAgBK,OAAhB,CAAwB/B,GAAzB,CAAN;AACAG,MAAAA,YAAY,CAACoB,UAAU,CAACG,IAAX,CAAgBK,OAAhB,CAAwBC,UAAzB,CAAZ;AACA3B,MAAAA,UAAU,CAACkB,UAAU,CAACG,IAAX,CAAgBK,OAAhB,CAAwB3B,OAAzB,CAAV;AACAG,MAAAA,SAAS,CAACgB,UAAU,CAACG,IAAX,CAAgBK,OAAhB,CAAwBzB,MAAzB,CAAT;AACAG,MAAAA,WAAW,CAACc,UAAU,CAACG,IAAX,CAAgBK,OAAhB,CAAwBvB,QAAzB,CAAX;AACAG,MAAAA,aAAa,CAACY,UAAU,CAACG,IAAX,CAAgBK,OAAhB,CAAwBrB,UAAzB,CAAb;AACAG,MAAAA,UAAU,CAACU,UAAU,CAACG,IAAX,CAAgBK,OAAhB,CAAwBE,QAAzB,CAAV;AACD,KAhBD;AAkBD,GA1BQ,EA0BN,CAACzC,GAAD,EAAME,GAAN,CA1BM,CAAT;AA4BA,sBACE;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,IAAI,EAAEE,IADR;AAEE,MAAA,IAAI,EAAEE,IAFR;AAGE,MAAA,GAAG,EAAEE,GAHP;AAIE,MAAA,SAAS,EAAEE,SAJb;AAKE,MAAA,OAAO,EAAEE,OALX;AAME,MAAA,MAAM,EAAEE,MANV;AAOE,MAAA,QAAQ,EAAEE,QAPZ;AAQE,MAAA,UAAU,EAAEE,UARd;AASE,MAAA,OAAO,EAAEE;AATX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA5DQrB,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport LeftSide from './components/LeftSide';\nimport RightSide from './components/RightSide';\n\nconst API_KEY = 'eabd8b1db297d680fe7d9ebdbb9b028a';\nconst API_URL = `http://api.openweathermap.org/data/2.5/onecall?`;\n\nfunction App() {\n\n  // All Needed Data\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [temp, setTemp] = useState(null);\n  const [icon, setIcon] = useState(null);\n  const [uvi, setUvi] = useState(null);\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [sunrise, setSunrise] = useState(null);\n  const [sunset, setSunset] = useState(null);\n  const [humidity, setHumidity] = useState(null);\n  const [visibility, setVisibility] = useState(null);\n  const [windDeg, setWindDeg] = useState(null);\n\n\n  useEffect(() => {\n    // Get current position with Latitude & Longitude\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLat(position.coords.latitude);\n      setLon(position.coords.longitude);\n    })\n    \n    // Request & get data from the API URL\n    axios.get(`${API_URL}lat=${lat}&lon=${lon}&exclude=hourly,minutley&units=metric&appid=${API_KEY}`)\n    .then((getWeather) => {\n      console.log(getWeather.data)\n      const nums = [0, 1, 2, 3, 4, 5, 6, 7]\n      for(var i = 0; i <= 7; i++) {\n        setTemp(getWeather.data.daily[nums[4]].temp.day)\n      }\n      \n      // setIcon(getWeather.data.daily.weather.icon);\n      setUvi(getWeather.data.current.uvi);\n      setWindSpeed(getWeather.data.current.wind_speed);\n      setSunrise(getWeather.data.current.sunrise);\n      setSunset(getWeather.data.current.sunset);\n      setHumidity(getWeather.data.current.humidity);\n      setVisibility(getWeather.data.current.visibility);\n      setWindDeg(getWeather.data.current.wind_deg);\n    });\n\n  }, [lat, lon])\n\n  return (\n    <section className=\"app\">\n      <LeftSide />\n      <RightSide \n        temp={temp}\n        icon={icon}\n        uvi={uvi}\n        windSpeed={windSpeed}\n        sunrise={sunrise}\n        sunset={sunset}\n        humidity={humidity}\n        visibility={visibility}\n        windDeg={windDeg}\n      />\n    </section>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}