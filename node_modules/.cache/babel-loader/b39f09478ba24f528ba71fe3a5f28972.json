{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Projects\\\\Weather App\\\\weather_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport LeftSide from './components/LeftSide';\nimport RightSide from './components/RightSide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'eabd8b1db297d680fe7d9ebdbb9b028a';\nconst API_URL = `http://api.openweathermap.org/data/2.5/onecall?`;\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(false);\n\n  const toggle = e => {\n    setState(!state);\n  };\n  /* All Needed States */\n\n\n  const [lat, setLat] = useState([]);\n  const [lon, setLon] = useState([]);\n  const [forecast, setForecast] = useState([]); // const [day1, setDay1] = useState([]);\n  // const [day2, setDay2] = useState([]);\n  // const [day3, setDay3] = useState([]);\n  // const [day4, setDay4] = useState([]);\n  // const [day5, setDay5] = useState([]);\n  // const [day6, setDay6] = useState([]);\n  // const [day7, setDay7] = useState([]);\n  // const [icon0, setIcon0] = useState([]);\n  // const [icon1, setIcon1] = useState([]);\n  // const [icon2, setIcon2] = useState([]);\n  // const [icon3, setIcon3] = useState([]);\n  // const [icon4, setIcon4] = useState([]);\n  // const [icon5, setIcon5] = useState([]);\n  // const [icon6, setIcon6] = useState([]);\n  // const [icon7, setIcon7] = useState([]);\n  // const [temp0, setTemp0] = useState([]);\n  // const [temp1, setTemp1] = useState([]);\n  // const [temp2, setTemp2] = useState([]);\n  // const [temp3, setTemp3] = useState([]);\n  // const [temp4, setTemp4] = useState([]);\n  // const [temp5, setTemp5] = useState([]);\n  // const [temp6, setTemp6] = useState([]);\n  // const [temp7, setTemp7] = useState([]);\n\n  const [currentTemp, setCurrentTemp] = useState([]);\n  const [desc, setDesc] = useState([]);\n  const [currentIcon, setCurrentIcon] = useState([]);\n  const [timeZone, setTimeZone] = useState([]);\n  const [uvi, setUvi] = useState([]);\n  const [windSpeed, setWindSpeed] = useState([]);\n  const [sunrise, setSunrise] = useState([]);\n  const [sunset, setSunset] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n  const [visibility, setVisibility] = useState([]);\n  const [windDeg, setWindDeg] = useState([]);\n  const [rain, setRain] = useState([]);\n  const [weatherMain, setWeatherMain] = useState([]);\n  /* All Needed States */\n\n  useEffect(() => {\n    // Get current position with Latitude & Longitude\n    navigator.geolocation.getCurrentPosition(position => {\n      setLat(position.coords.latitude);\n      setLon(position.coords.longitude);\n    }); // Request & get data from the API URL\n\n    axios.get(`${API_URL}lat=${lat}&lon=${lon}&exclude=hourly,minutley&units=metric&appid=${API_KEY}`).then(res => {\n      const getData = res.data;\n      /* All Needed API Data */\n\n      setForecast(weekdays[new Date(getData.daily[0].dt * 1000).getDay()]); // setDay1(weekdays[new Date(getData.daily[1].dt * 1000).getDay()]);\n      // setDay2(weekdays[new Date(getData.daily[2].dt * 1000).getDay()]);\n      // setDay3(weekdays[new Date(getData.daily[3].dt * 1000).getDay()]);\n      // setDay4(weekdays[new Date(getData.daily[4].dt * 1000).getDay()]);\n      // setDay5(weekdays[new Date(getData.daily[5].dt * 1000).getDay()]);\n      // setDay6(weekdays[new Date(getData.daily[6].dt * 1000).getDay()]);\n      // setDay7(weekdays[new Date(getData.daily[7].dt * 1000).getDay()]);\n      // setIcon0(getData.daily[0].weather[0].icon);\n      // setIcon1(getData.daily[1].weather[0].icon);\n      // setIcon2(getData.daily[2].weather[0].icon);\n      // setIcon3(getData.daily[3].weather[0].icon);\n      // setIcon4(getData.daily[4].weather[0].icon);\n      // setIcon5(getData.daily[5].weather[0].icon);\n      // setIcon6(getData.daily[6].weather[0].icon);\n      // setIcon7(getData.daily[7].weather[0].icon);\n      // setTemp0(getData.daily[0].temp.day);\n      // setTemp1(getData.daily[1].temp.day);\n      // setTemp2(getData.daily[2].temp.day);\n      // setTemp3(getData.daily[3].temp.day);\n      // setTemp4(getData.daily[4].temp.day);\n      // setTemp5(getData.daily[5].temp.day);\n      // setTemp6(getData.daily[6].temp.day);\n      // setTemp7(getData.daily[7].temp.day);\n\n      setUvi(getData.current.uvi);\n      setWindSpeed(getData.current.wind_speed);\n      setSunrise(new Date(getData.current.sunrise * 1000).toLocaleTimeString());\n      setSunset(new Date(getData.current.sunset * 1000).toLocaleTimeString());\n      setHumidity(getData.current.humidity);\n      setVisibility(getData.current.visibility);\n      setWindDeg(getData.current.wind_deg);\n      setCurrentTemp(getData.current.temp);\n      setDesc(getData.current.weather[0].description);\n      setCurrentIcon(getData.current.weather[0].icon);\n      setTimeZone(getData.timezone);\n      setRain(getData.current.rain);\n      setWeatherMain(getData.current.weather[0].main);\n      /* All Needed API Data */\n    });\n  }, [lat, lon]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSide, {\n      currentTemp: currentTemp,\n      desc: desc,\n      currentIcon: currentIcon,\n      toggle: toggle,\n      state: state,\n      timeZone: timeZone,\n      rain: rain,\n      weatherMain: weatherMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n      forecast: forecast // day1={day1}\n      // day2={day2}\n      // day3={day3}\n      // day4={day4}\n      // day5={day5}\n      // day6={day6}\n      // day7={day7}\n      // temp0={temp0}\n      // temp1={temp1}\n      // temp2={temp2}\n      // temp3={temp3}\n      // temp4={temp4}\n      // temp5={temp5}\n      // temp6={temp6}\n      // temp7={temp7}\n      // icon0={icon0}\n      // icon1={icon1}\n      // icon2={icon2}\n      // icon3={icon3}\n      // icon4={icon4}\n      // icon5={icon5}\n      // icon6={icon6}\n      // icon7={icon7}\n      ,\n      uvi: uvi,\n      windSpeed: windSpeed,\n      sunrise: sunrise,\n      sunset: sunset,\n      humidity: humidity,\n      visibility: visibility,\n      windDeg: windDeg,\n      toggle: toggle,\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GXndUQZjBMNt0QL7nq/E1yxku2w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Programming/Projects/Weather App/weather_app/src/App.js"],"names":["React","useState","useEffect","axios","LeftSide","RightSide","API_KEY","API_URL","weekdays","App","state","setState","toggle","e","lat","setLat","lon","setLon","forecast","setForecast","currentTemp","setCurrentTemp","desc","setDesc","currentIcon","setCurrentIcon","timeZone","setTimeZone","uvi","setUvi","windSpeed","setWindSpeed","sunrise","setSunrise","sunset","setSunset","humidity","setHumidity","visibility","setVisibility","windDeg","setWindDeg","rain","setRain","weatherMain","setWeatherMain","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","res","getData","data","Date","daily","dt","getDay","current","wind_speed","toLocaleTimeString","wind_deg","temp","weather","description","icon","timezone","main"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport LeftSide from './components/LeftSide';\nimport RightSide from './components/RightSide';\n\nconst API_KEY = 'eabd8b1db297d680fe7d9ebdbb9b028a';\nconst API_URL = `http://api.openweathermap.org/data/2.5/onecall?`;\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nfunction App() {\n    const [state, setState] = useState(false)\n    const toggle = (e) => {\n        setState(!state);\n    }\n\n  /* All Needed States */\n  const [lat, setLat] = useState([]);\n  const [lon, setLon] = useState([]);\n\n  const [forecast, setForecast] = useState([]);\n  // const [day1, setDay1] = useState([]);\n  // const [day2, setDay2] = useState([]);\n  // const [day3, setDay3] = useState([]);\n  // const [day4, setDay4] = useState([]);\n  // const [day5, setDay5] = useState([]);\n  // const [day6, setDay6] = useState([]);\n  // const [day7, setDay7] = useState([]);\n\n  // const [icon0, setIcon0] = useState([]);\n  // const [icon1, setIcon1] = useState([]);\n  // const [icon2, setIcon2] = useState([]);\n  // const [icon3, setIcon3] = useState([]);\n  // const [icon4, setIcon4] = useState([]);\n  // const [icon5, setIcon5] = useState([]);\n  // const [icon6, setIcon6] = useState([]);\n  // const [icon7, setIcon7] = useState([]);\n\n  // const [temp0, setTemp0] = useState([]);\n  // const [temp1, setTemp1] = useState([]);\n  // const [temp2, setTemp2] = useState([]);\n  // const [temp3, setTemp3] = useState([]);\n  // const [temp4, setTemp4] = useState([]);\n  // const [temp5, setTemp5] = useState([]);\n  // const [temp6, setTemp6] = useState([]);\n  // const [temp7, setTemp7] = useState([]);\n\n  const [currentTemp, setCurrentTemp] = useState([]);\n  const [desc, setDesc] = useState([]);\n  const [currentIcon, setCurrentIcon] = useState([]);\n  const [timeZone, setTimeZone] = useState([]);\n  const [uvi, setUvi] = useState([]);\n  const [windSpeed, setWindSpeed] = useState([]);\n  const [sunrise, setSunrise] = useState([]);\n  const [sunset, setSunset] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n  const [visibility, setVisibility] = useState([]);\n  const [windDeg, setWindDeg] = useState([]);\n  const [rain, setRain] = useState([]);\n  const [weatherMain, setWeatherMain] = useState([])\n  /* All Needed States */\n\n  useEffect(() => {\n    // Get current position with Latitude & Longitude\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLat(position.coords.latitude);\n      setLon(position.coords.longitude);\n    })\n    \n    // Request & get data from the API URL\n    axios.get(`${API_URL}lat=${lat}&lon=${lon}&exclude=hourly,minutley&units=metric&appid=${API_KEY}`)\n    .then((res) => {\n      const getData = res.data;\n\n      /* All Needed API Data */\n      setForecast(weekdays[new Date(getData.daily[0].dt * 1000).getDay()]);\n      // setDay1(weekdays[new Date(getData.daily[1].dt * 1000).getDay()]);\n      // setDay2(weekdays[new Date(getData.daily[2].dt * 1000).getDay()]);\n      // setDay3(weekdays[new Date(getData.daily[3].dt * 1000).getDay()]);\n      // setDay4(weekdays[new Date(getData.daily[4].dt * 1000).getDay()]);\n      // setDay5(weekdays[new Date(getData.daily[5].dt * 1000).getDay()]);\n      // setDay6(weekdays[new Date(getData.daily[6].dt * 1000).getDay()]);\n      // setDay7(weekdays[new Date(getData.daily[7].dt * 1000).getDay()]);\n\n      // setIcon0(getData.daily[0].weather[0].icon);\n      // setIcon1(getData.daily[1].weather[0].icon);\n      // setIcon2(getData.daily[2].weather[0].icon);\n      // setIcon3(getData.daily[3].weather[0].icon);\n      // setIcon4(getData.daily[4].weather[0].icon);\n      // setIcon5(getData.daily[5].weather[0].icon);\n      // setIcon6(getData.daily[6].weather[0].icon);\n      // setIcon7(getData.daily[7].weather[0].icon);\n\n      // setTemp0(getData.daily[0].temp.day);\n      // setTemp1(getData.daily[1].temp.day);\n      // setTemp2(getData.daily[2].temp.day);\n      // setTemp3(getData.daily[3].temp.day);\n      // setTemp4(getData.daily[4].temp.day);\n      // setTemp5(getData.daily[5].temp.day);\n      // setTemp6(getData.daily[6].temp.day);\n      // setTemp7(getData.daily[7].temp.day);\n\n      setUvi(getData.current.uvi);\n      setWindSpeed(getData.current.wind_speed);\n      setSunrise(new Date(getData.current.sunrise * 1000).toLocaleTimeString());\n      setSunset(new Date(getData.current.sunset * 1000).toLocaleTimeString());\n      setHumidity(getData.current.humidity);\n      setVisibility(getData.current.visibility);\n      setWindDeg(getData.current.wind_deg);\n      setCurrentTemp(getData.current.temp);\n      setDesc(getData.current.weather[0].description);\n      setCurrentIcon(getData.current.weather[0].icon);\n      setTimeZone(getData.timezone);\n      setRain(getData.current.rain);\n      setWeatherMain(getData.current.weather[0].main);\n      /* All Needed API Data */\n    });\n  }, [lat, lon])\n\n  return (\n    <section className=\"app\">\n      <LeftSide \n        currentTemp={currentTemp}\n        desc={desc}\n        currentIcon={currentIcon}\n        toggle={toggle}\n        state={state}\n        timeZone={timeZone}\n        rain={rain}\n        weatherMain={weatherMain}\n      />\n      <RightSide \n        forecast={forecast}\n        // day1={day1}\n        // day2={day2}\n        // day3={day3}\n        // day4={day4}\n        // day5={day5}\n        // day6={day6}\n        // day7={day7}\n\n        // temp0={temp0}\n        // temp1={temp1}\n        // temp2={temp2}\n        // temp3={temp3}\n        // temp4={temp4}\n        // temp5={temp5}\n        // temp6={temp6}\n        // temp7={temp7}\n\n        // icon0={icon0}\n        // icon1={icon1}\n        // icon2={icon2}\n        // icon3={icon3}\n        // icon4={icon4}\n        // icon5={icon5}\n        // icon6={icon6}\n        // icon7={icon7}\n\n        uvi={uvi}\n        windSpeed={windSpeed}\n        sunrise={sunrise}\n        sunset={sunset}\n        humidity={humidity}\n        visibility={visibility}\n        windDeg={windDeg}\n        toggle={toggle}\n        state={state}\n      />\n    </section>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}